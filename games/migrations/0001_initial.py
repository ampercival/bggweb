# Generated by Django 5.0.14 on 2025-09-11 00:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FetchJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('top_n', 'Top N'), ('collection', 'Collection')], max_length=20)),
                ('params', models.JSONField(default=dict)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('progress', models.IntegerField(default=0)),
                ('total', models.IntegerField(default=0)),
                ('error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bgg_id', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('Base Game', 'Base Game'), ('Expansion', 'Expansion')], max_length=20)),
                ('year', models.CharField(blank=True, max_length=10, null=True)),
                ('avg_rating', models.FloatField(blank=True, null=True)),
                ('num_voters', models.IntegerField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('weight_votes', models.IntegerField(blank=True, null=True)),
                ('bgg_rank', models.IntegerField(blank=True, null=True)),
                ('owned', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OwnedGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='games.collection')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='games.game')),
            ],
        ),
        migrations.AddField(
            model_name='collection',
            name='games',
            field=models.ManyToManyField(through='games.OwnedGame', to='games.game'),
        ),
        migrations.CreateModel(
            name='PlayerCountRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('best_pct', models.FloatField(default=0.0)),
                ('best_votes', models.IntegerField(default=0)),
                ('rec_pct', models.FloatField(default=0.0)),
                ('rec_votes', models.IntegerField(default=0)),
                ('notrec_pct', models.FloatField(default=0.0)),
                ('notrec_votes', models.IntegerField(default=0)),
                ('vote_count', models.IntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_counts', to='games.game')),
            ],
            options={
                'unique_together': {('game', 'count')},
            },
        ),
    ]
